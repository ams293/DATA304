---
title: "HW8"
subtitle: "due 2/23"
author: "Alayna Smith - ams293"
format: 
  html:
    code-fold: true
embed-resources: true
code-tools: true
---

[**Exercise 1:**]{.underline}

Basic bars:

```{r, warning=FALSE}
#| code-fold: true

library(vegawidget)
'
{
  "title": "Capacity and Demand Hours by Month",
  "data":
    { "url" :
        "https://calvin-data304.netlify.app/data/swd-lets-practice-ex-2-3.csv"
    },
  "height": 400,
  "width": 450,
  "transform": [
    {
      "fold": ["capacity", "demand"],
      "as": ["Type", "Value"]
    },
    {
      "calculate": "toNumber(replace(datum[\\"Value\\"], \\",\\", \\"\\"))",
      "as": "Numeric_Value"
    }
  ],
  "mark": "bar",
  "encoding": {
    "x":{
      "field": "date", 
      "type": "nominal",
      "title": "Date"
    },
    "y":{
      "field": "Numeric_Value",
      "type": "quantitative",
      "title": "Number of Project Hours"
    },
    "xOffset": {
      "field": "Type"
    },
    "color": {
      "field": "Type", 
      "type": "nominal",
      "title": null
    }
  }
}
' |> as_vegaspec()
```

Line Graph:

```{r, warning=FALSE}
'
{
  "title": "Capacity and Demand Hours by Month",
  "data":
    { "url" :
        "https://calvin-data304.netlify.app/data/swd-lets-practice-ex-2-3.csv"
    },
  "height": 400,
  "width": 450,
  "transform": [
    {
      "fold": ["capacity", "demand"],
      "as": ["Type", "Value"]
    },
    {
      "calculate": "toNumber(replace(datum[\\"Value\\"], \\",\\", \\"\\"))",
      "as": "Numeric_Value"
    }
  ],
  "mark": "line",
  "encoding": {
    "x":{
      "field": "date", 
      "type": "nominal",
      "title": "Date"
    },
    "y":{
      "field": "Numeric_Value",
      "type": "quantitative",
      "title": "Number of Project Hours"
    },
    "xOffset": {
      "field": "Type"
    },
    "color": {
      "field": "Type", 
      "type": "nominal",
      "title": null
    }
  }
}
' |> as_vegaspec()
```

Overlapping Bars:

```{r, warning=FALSE}
'
{
  "title": {
    "text": "Capacity and Demand Hours by Month",
    "subtitle": "Capacity: dark blue, Demand: light blue"
  },
  "subtitle": "Capacity: dark blue",
  "data": {
    "url": "https://calvin-data304.netlify.app/data/swd-lets-practice-ex-2-3.csv"
  },
  "height": 400,
  "width": 450,
    "transform": [
    {
      "calculate": "toNumber(replace(datum[\\"capacity\\"], \\",\\", \\"\\"))",
      "as": "capacity_Value"
    },
    {
      "calculate": "toNumber(replace(datum[\\"demand\\"], \\",\\", \\"\\"))",
      "as": "demand_Value"
    }
  ],
  "layer": [
    {
      "mark": {
        "type": "bar",
        "opacity": 0.5
      },
      "encoding": {
        "x": {
          "field": "date",
          "type": "nominal"
        },
        "y": {
          "field": "capacity_Value",
          "type": "quantitative"
        },
        "color": {
          "value": "blue"
        }
      }
    },
    {
      "mark": {
        "type": "bar",
        "opacity": 0.5
      },
      "encoding": {
        "x": {
          "field": "date",
          "type": "nominal"
        },
        "y": {
          "field": "demand_Value",
          "type": "quantitative",
          "title": "Number of Project Hours"
        },
        "color": {
          "value": "steelblue"
        }
      }
    }
  ]
}
' |> as_vegaspec()
```

Stacked bars:

```{r, warning=FALSE}
'
{
  "title": {
    "text": "Capacity and Unmet Demand by Month"
  },
  "data": {
    "url": "https://calvin-data304.netlify.app/data/swd-lets-practice-ex-2-3.csv"
  },
  "height": 400,
  "width": 450,
  "transform": [
    {
      "calculate": "toNumber(replace(datum[\\"capacity\\"], \\",\\", \\"\\"))",
      "as": "capacity_Value"
    },
    {
      "calculate": "toNumber(replace(datum[\\"demand\\"], \\",\\", \\"\\"))",
      "as": "demand_Value"
    },
    {
      "calculate": "datum.demand_Value - datum.capacity_Value",
      "as": "unmet_demand"
    },
    {
      "fold": ["capacity_Value", "unmet_demand"],
      "as": ["category", "value"]
    }
  ],
  "mark": "bar",
  "encoding": {
    "x": {
      "field": "date",
      "type": "nominal",
      "axis": {"title": "Date"}
    },
    "y": {
      "field": "value",
      "type": "quantitative",
      "axis": {"title": "Number of Project Hours"},
      "stack": "zero"
    },
    "color": {
      "field": "category",
      "type": "nominal",
      "scale": {
        "domain": ["capacity_Value", "unmet_demand"],
        "range": ["steelblue", "orange"]
      },
      "legend": {"title": null}
    }
  }
}
' |> as_vegaspec()
```

Dot Plot:

```{r, warning=FALSE}
'
{
  "title": {
    "text": "Capacity and Demand Hours by Month",
    "subtitle": "Capacity: dark blue, Demand: light blue"
  },
  "data": {
    "url": "https://calvin-data304.netlify.app/data/swd-lets-practice-ex-2-3.csv"
  },
    "transform": [
    {
      "calculate": "toNumber(replace(datum[\\"capacity\\"], \\",\\", \\"\\"))",
      "as": "capacity_Value"
    },
    {
      "calculate": "toNumber(replace(datum[\\"demand\\"], \\",\\", \\"\\"))",
      "as": "demand_Value"
    },
    {
      "calculate": "datum.demand_Value / 1000",
      "as": "demand_thousand"
    },
    {
      "calculate": "datum.capacity_Value / 1000",
      "as": "capacity_thousand"
    }
  ],
  "height": 400,
  "width": 450,
  "layer": [
    {
      "mark": "bar",
      "encoding": {
        "x": {
          "field": "date", 
          "type": "nominal"
          },
        "y": {
          "field": "capacity_thousand", 
          "type": "quantitative"
          },
        "y2": {
          "field": "demand_thousand"
          },
        "color": {
          "value": "lightblue"
        },
        "size": {"value": 10}
      }
    },
    {
      "mark": {"type": "point", "filled": true, "size": 200},
      "encoding": {
        "x": {
          "field": "date", 
          "type": "nominal"
          },
        "y": {
          "field": "capacity_thousand", 
          "type": "quantitative",
          "axis": {"title": "Project Hours (Thousands)"}
          },
        "color": {
          "value": "blue",
          "legend": {"title": "Legend", "orient": "right"}
        }
      }
    },
    {
      "mark": {"type": "point", "filled": true, "size": 200},
      "encoding": {
        "x": {
          "field": "date", 
          "type": "nominal"
          },
        "y": {
          "field": "demand_thousand", 
          "type": "quantitative"
          },
        "color": {
          "value": "steelblue"
        }
      }
    },
    {
      "mark": {
        "type": "text", 
        "dy": -15
        },
      "encoding": {
        "x": {
          "field": "date", 
          "type": "nominal"
          },
        "y": {
          "field": "capacity_thousand", 
          "type": "quantitative"
          },
        "text": {
          "field": "capacity_thousand", 
          "type": "quantitative",
          "format": ".0f"
          },
        "color": {"value": "blue"}
      }
    },
    {
      "mark": {
        "type": "text", 
        "dy": -15
      },
      "encoding": {
        "x": {
          "field": "date", 
          "type": "nominal"
          },
        "y": {
          "field": "demand_thousand", 
          "type": "quantitative"
          },
        "text": {
          "field": "demand_thousand", 
          "type": "quantitative",
          "format": ".0f"
          },
        "color": {"value": "steelblue"}
      }
    }
  ]
}
' |> as_vegaspec()
```

Unmet Demand Line Graph:

```{r, warning=FALSE}
'
{
  "title": {
    "text": "Unmet Demand by Month"
  },
  "data": {
    "url": "https://calvin-data304.netlify.app/data/swd-lets-practice-ex-2-3.csv"
  },
  "height": 400,
  "width": 450,
  "transform": [
    {
      "calculate": "toNumber(replace(datum[\\"capacity\\"], \\",\\", \\"\\"))",
      "as": "capacity_Value"
    },
    {
      "calculate": "toNumber(replace(datum[\\"demand\\"], \\",\\", \\"\\"))",
      "as": "demand_Value"
    },
    {
      "calculate": "datum.demand_Value - datum.capacity_Value",
      "as": "unmet_demand"
    }
  ],
  "mark": "line",
  "encoding": {
    "x": {
      "field": "date",
      "type": "nominal",
      "title": "Date"
    },
    "y": {
      "field": "unmet_demand",
      "type": "quantitative",
      "title": "Number of Project Hours"
    }
  }
}
' |> as_vegaspec()
```

[**Exercise 2:**]{.underline}

a\)

```{r}
library(vegabrite)
vl_chart() |>
  vl_aggregate(
    groupby = list("year", "sex"), 
    aggregate =  list(list(
      op ="sum",
      field = "perc",
      as = "total_perc"
    ))
  ) |>
  vl_mark_line() |>
  vl_add_properties(width = 450, height = 400) |>
  vl_add_properties(
    title =  list( 
      text = "Total Percent of Men and Women working various jobs"
    )) |>
  vl_encode_x("year:Q") |>
  vl_encode_y("total_perc:Q") |>
  vl_encode_color("sex:N") |>
  vl_add_data(url = "https://cdn.jsdelivr.net/npm/vega-datasets@2.8.0/data/jobs.json") # |> format()
```

b\)

```{r}
vl_chart() |>
  vl_filter(
    "datum.year == 1850 |
    datum.year == 1900 |
    datum.year == 1950 |
    datum.year == 2000"
    ) |>
  vl_facet(
    field = "year"
  ) |>
  vl_pivot(
    pivot = "sex",
    value = "perc",
    groupby = list(
      "year",
      "job"
    )
  ) |>
  vl_mark_point() |>
  vl_add_properties(
  title =  list( 
    text = "Percent of Men and Women working various jobs"
  )) |>
  vl_encode_x("men:Q") |>
  vl_axis_x(format=".0%") |>
  vl_scale_x(type = "symlog", constant = 0.00001) |>
  vl_encode_y("women:Q") |>
  vl_axis_y(format=".0%") |>
  vl_scale_y(type = "symlog", constant = 0.00001) |>
  vl_encode_color("job:N") |>
  vl_add_data(url = "https://cdn.jsdelivr.net/npm/vega-datasets@2.8.0/data/jobs.json") 
```


[**Exercise 3:**]{.underline}

```{r}
library(tidyverse)

gas_prices <- read.csv("https://calvin-data304.netlify.app/data/pump_price_for_gasoline_us_per_liter.csv")
country_data <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")

# Reshape the gas prices data from wide to long format
gas_prices_long <- gas_prices |>
  mutate(X2016 = readr::parse_number(X2016)) |>
  pivot_longer(cols = starts_with("X"), names_to = "Year", values_to = "Price_per_liter") |>
  mutate(Price_per_liter = as.numeric(Price_per_liter)) |> 
  filter(!is.na(Price_per_liter))  

gas_prices_long <- gas_prices_long |>
  mutate(Price_per_gallon = Price_per_liter * 3.78541)

merged_data <- gas_prices_long |>
  left_join(country_data, by = c("country" = "name")) |>
  select(Price_per_gallon, alpha.3, region, Year)

unmatched_countries <- gas_prices_long |>
  filter(!country %in% country_data$name)

num_unmatched <- nrow(unmatched_countries)

# Print unmatched countries
if (num_unmatched > 0) {
  print(paste("Number of unmatched countries:", num_unmatched))
} else {
  print("All countries matched.")
}

```

```{r}
library(reticulate)
library(dplyr)
alt <- import("altair")
pd <- import("pandas")
```

```{r}
# Filter out "null" region in R
merged_data_filtered <- merged_data |>
  filter(region != "null") |>
  group_by(Year, region) |>
  summarize(Price_per_gallon = mean(Price_per_gallon, na.rm = TRUE), .groups = 'drop') |>
  mutate(Year = as.numeric(gsub("X", "", Year)))

# Convert the filtered R dataframe to a Pandas dataframe
merged_data_py <- r_to_py(merged_data_filtered)

(alt$Chart(merged_data_py)$mark_line()$
  encode(
    x = "Year",
    y = "Price_per_gallon",
    color = "region"
  )$
  properties(
    width = 450, 
    height = 400,
    title = "Average Gas Price per Gallon by Year and Region")
)
```

```{r}
merged_data_averaged <- merged_data |>
  filter(region != "null") |>
  group_by(Year) |>
  summarize(Price_per_gallon = mean(Price_per_gallon, na.rm = TRUE), .groups = 'drop') |>
  mutate(Year = as.numeric(gsub("X", "", Year)))

merged_data_averaged_py <- r_to_py(merged_data_averaged)

(alt$Chart(merged_data_averaged_py)$mark_line()$
  encode(
    x = "Year",
    y = "Price_per_gallon"
  )$
  properties(
    width = 450, 
    height = 400,
    title = "Average Gas Price per Gallon by Year")
)
```
